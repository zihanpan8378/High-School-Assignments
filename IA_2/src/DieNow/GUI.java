/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DieNow;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author 40474
 */
public class GUI extends javax.swing.JFrame {

    private int time = 10;
    private int turn = 1;
    DieNow d = new DieNow();
    FileIO f = new FileIO();
    private JLabel[][] l = new JLabel[13][13];

    /**
     * pre: none
     * post: Creates new form GUI
     */
    public GUI() {
        initComponents();
        Update();
        Game.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent E) {
                System.out.println("somehting==");
                if (E.getKeyCode() == KeyEvent.VK_UP) {
                    d.movePlayer(turn, 4);
                    Update();
                }
                if (E.getKeyCode() == KeyEvent.VK_LEFT) {
                    d.movePlayer(turn, 3);
                    Update();
                }
                if (E.getKeyCode() == KeyEvent.VK_DOWN) {
                    d.movePlayer(turn, 2);
                    Update();
                }
                if (E.getKeyCode() == KeyEvent.VK_RIGHT) {
                    d.movePlayer(turn, 1);
                    Update();
                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Start = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        StartGame = new javax.swing.JButton();
        Rules = new javax.swing.JButton();
        Board2 = new javax.swing.JLabel();
        Names = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        P2N = new javax.swing.JTextField();
        P1N = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        StartGame1 = new javax.swing.JButton();
        jBtnBack = new javax.swing.JButton();
        Board4 = new javax.swing.JLabel();
        Rule = new javax.swing.JPanel();
        RulesLabel = new javax.swing.JLabel();
        ASDF = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        left = new javax.swing.JButton();
        right = new javax.swing.JButton();
        Board3 = new javax.swing.JLabel();
        Game = new javax.swing.JPanel();
        R0C11 = new javax.swing.JLabel();
        R0C9 = new javax.swing.JLabel();
        R0C7 = new javax.swing.JLabel();
        R0C5 = new javax.swing.JLabel();
        R0C3 = new javax.swing.JLabel();
        R0C1 = new javax.swing.JLabel();
        R1C12 = new javax.swing.JLabel();
        R1C11 = new javax.swing.JLabel();
        R1C10 = new javax.swing.JLabel();
        R1C9 = new javax.swing.JLabel();
        R1C8 = new javax.swing.JLabel();
        R1C7 = new javax.swing.JLabel();
        R1C6 = new javax.swing.JLabel();
        R1C5 = new javax.swing.JLabel();
        R1C4 = new javax.swing.JLabel();
        R1C3 = new javax.swing.JLabel();
        R1C2 = new javax.swing.JLabel();
        R1C1 = new javax.swing.JLabel();
        R1C0 = new javax.swing.JLabel();
        R2C11 = new javax.swing.JLabel();
        R2C9 = new javax.swing.JLabel();
        R2C7 = new javax.swing.JLabel();
        R2C5 = new javax.swing.JLabel();
        R2C3 = new javax.swing.JLabel();
        R2C1 = new javax.swing.JLabel();
        R3C12 = new javax.swing.JLabel();
        R3C11 = new javax.swing.JLabel();
        R3C10 = new javax.swing.JLabel();
        R3C9 = new javax.swing.JLabel();
        R3C8 = new javax.swing.JLabel();
        R3C7 = new javax.swing.JLabel();
        R3C6 = new javax.swing.JLabel();
        R3C5 = new javax.swing.JLabel();
        R3C4 = new javax.swing.JLabel();
        R3C3 = new javax.swing.JLabel();
        R3C2 = new javax.swing.JLabel();
        R3C1 = new javax.swing.JLabel();
        R3C0 = new javax.swing.JLabel();
        R4C11 = new javax.swing.JLabel();
        R4C9 = new javax.swing.JLabel();
        R4C7 = new javax.swing.JLabel();
        R4C5 = new javax.swing.JLabel();
        R4C3 = new javax.swing.JLabel();
        R4C1 = new javax.swing.JLabel();
        R5C12 = new javax.swing.JLabel();
        R5C11 = new javax.swing.JLabel();
        R5C10 = new javax.swing.JLabel();
        R5C9 = new javax.swing.JLabel();
        R5C8 = new javax.swing.JLabel();
        R5C7 = new javax.swing.JLabel();
        R5C6 = new javax.swing.JLabel();
        R5C5 = new javax.swing.JLabel();
        R5C4 = new javax.swing.JLabel();
        R5C3 = new javax.swing.JLabel();
        R5C2 = new javax.swing.JLabel();
        R5C1 = new javax.swing.JLabel();
        R5C0 = new javax.swing.JLabel();
        R6C11 = new javax.swing.JLabel();
        R6C9 = new javax.swing.JLabel();
        R6C7 = new javax.swing.JLabel();
        R6C5 = new javax.swing.JLabel();
        R6C3 = new javax.swing.JLabel();
        R6C1 = new javax.swing.JLabel();
        R7C12 = new javax.swing.JLabel();
        R7C11 = new javax.swing.JLabel();
        R7C10 = new javax.swing.JLabel();
        R7C9 = new javax.swing.JLabel();
        R7C8 = new javax.swing.JLabel();
        R7C7 = new javax.swing.JLabel();
        R7C6 = new javax.swing.JLabel();
        R7C5 = new javax.swing.JLabel();
        R7C4 = new javax.swing.JLabel();
        R7C3 = new javax.swing.JLabel();
        R7C2 = new javax.swing.JLabel();
        R7C1 = new javax.swing.JLabel();
        R7C0 = new javax.swing.JLabel();
        R8C11 = new javax.swing.JLabel();
        R8C9 = new javax.swing.JLabel();
        R8C7 = new javax.swing.JLabel();
        R8C5 = new javax.swing.JLabel();
        R8C3 = new javax.swing.JLabel();
        R8C1 = new javax.swing.JLabel();
        R9C12 = new javax.swing.JLabel();
        R9C11 = new javax.swing.JLabel();
        R9C10 = new javax.swing.JLabel();
        R9C9 = new javax.swing.JLabel();
        R9C8 = new javax.swing.JLabel();
        R9C7 = new javax.swing.JLabel();
        R9C6 = new javax.swing.JLabel();
        R9C5 = new javax.swing.JLabel();
        R9C4 = new javax.swing.JLabel();
        R9C3 = new javax.swing.JLabel();
        R9C2 = new javax.swing.JLabel();
        R9C1 = new javax.swing.JLabel();
        R9C0 = new javax.swing.JLabel();
        R10C11 = new javax.swing.JLabel();
        R10C9 = new javax.swing.JLabel();
        R10C7 = new javax.swing.JLabel();
        R10C5 = new javax.swing.JLabel();
        R10C3 = new javax.swing.JLabel();
        R10C1 = new javax.swing.JLabel();
        R11C12 = new javax.swing.JLabel();
        R11C11 = new javax.swing.JLabel();
        R11C10 = new javax.swing.JLabel();
        R11C9 = new javax.swing.JLabel();
        R11C8 = new javax.swing.JLabel();
        R11C7 = new javax.swing.JLabel();
        R11C6 = new javax.swing.JLabel();
        R11C5 = new javax.swing.JLabel();
        R11C4 = new javax.swing.JLabel();
        R11C3 = new javax.swing.JLabel();
        R11C2 = new javax.swing.JLabel();
        R11C1 = new javax.swing.JLabel();
        R11C0 = new javax.swing.JLabel();
        R12C11 = new javax.swing.JLabel();
        R12C9 = new javax.swing.JLabel();
        R12C7 = new javax.swing.JLabel();
        R12C5 = new javax.swing.JLabel();
        R12C3 = new javax.swing.JLabel();
        R12C1 = new javax.swing.JLabel();
        Board = new javax.swing.JLabel();
        Turn = new javax.swing.JLabel();
        Right = new javax.swing.JButton();
        Up = new javax.swing.JButton();
        Down = new javax.swing.JButton();
        Left = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Right1 = new javax.swing.JButton();
        Up1 = new javax.swing.JButton();
        Down1 = new javax.swing.JButton();
        Left1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        LTime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        End = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Player = new javax.swing.JLabel();
        Winner = new javax.swing.JLabel();
        P2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        P1 = new javax.swing.JLabel();
        Again = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        DoubleCheck = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jBtnBack1 = new javax.swing.JButton();
        Board1 = new javax.swing.JLabel();
        Review = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReviewText = new javax.swing.JTextArea();
        Back3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        Start.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("端脑");
        Start.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 210, 110));

        StartGame.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        StartGame.setText("Start");
        StartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameActionPerformed(evt);
            }
        });
        Start.add(StartGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 500, 210, 80));

        Rules.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Rules.setText("Rules");
        Rules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RulesActionPerformed(evt);
            }
        });
        Start.add(Rules, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 210, 80));

        Board2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/BG1.jpg"))); // NOI18N
        Start.add(Board2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 0, 1050, 710));

        getContentPane().add(Start, "card4");

        Names.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Player 2 Name:");
        Names.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, -1, -1));

        P2N.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Names.add(P2N, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 320, 170, 70));

        P1N.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Names.add(P1N, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 170, 70));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("端脑");
        Names.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 210, 110));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Player 1 Name:");
        Names.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, -1, -1));

        StartGame1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        StartGame1.setText("Enter Name");
        StartGame1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGame1ActionPerformed(evt);
            }
        });
        Names.add(StartGame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 540, 210, 80));

        jBtnBack.setText("Back To Main Menu");
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });
        Names.add(jBtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 630, 190, 60));

        Board4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/BG1.jpg"))); // NOI18N
        Names.add(Board4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 0, 1050, 710));

        getContentPane().add(Names, "card4");

        Rule.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RulesLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Rule1.png"))); // NOI18N
        Rule.add(RulesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 730, 560));

        ASDF.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        ASDF.setForeground(new java.awt.Color(255, 255, 255));
        ASDF.setText("Rules:");
        Rule.add(ASDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, -1));

        Back.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        Rule.add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 640, 180, 70));

        left.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        left.setText("←");
        left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftActionPerformed(evt);
            }
        });
        Rule.add(left, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 650, 120, 50));

        right.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        right.setText("→");
        right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightActionPerformed(evt);
            }
        });
        Rule.add(right, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 650, 130, 50));

        Board3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/DieNow.png"))); // NOI18N
        Rule.add(Board3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 0, 1050, 710));

        getContentPane().add(Rule, "card4");

        Game.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GameKeyPressed(evt);
            }
        });
        Game.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Game.add(R0C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 80, 20));
        Game.add(R0C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 80, 20));
        Game.add(R0C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 80, 20));
        Game.add(R0C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 80, 20));
        Game.add(R0C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 80, 20));

        R0C1.setAutoscrolls(true);
        Game.add(R0C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 20));
        Game.add(R1C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, 20, 80));
        Game.add(R1C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 60, 90));
        Game.add(R1C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 20, 80));
        Game.add(R1C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 60, 90));
        Game.add(R1C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 20, 80));
        Game.add(R1C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 60, 90));
        Game.add(R1C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 20, 80));
        Game.add(R1C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 60, 90));
        Game.add(R1C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 20, 80));
        Game.add(R1C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 60, 90));
        Game.add(R1C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 20, 80));

        R1C1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Player1.png"))); // NOI18N
        Game.add(R1C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, 90));
        Game.add(R1C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 20, 80));
        Game.add(R2C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 80, 20));
        Game.add(R2C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 80, 20));
        Game.add(R2C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 80, 20));
        Game.add(R2C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 80, 20));
        Game.add(R2C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 80, 20));
        Game.add(R2C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 80, 20));
        Game.add(R3C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 20, 80));
        Game.add(R3C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, 60, 90));
        Game.add(R3C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 20, 80));
        Game.add(R3C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 60, 90));
        Game.add(R3C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, 20, 80));
        Game.add(R3C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 60, 90));
        Game.add(R3C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 20, 80));
        Game.add(R3C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 60, 90));
        Game.add(R3C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 20, 80));
        Game.add(R3C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 60, 90));
        Game.add(R3C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 20, 80));
        Game.add(R3C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 60, 90));
        Game.add(R3C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 20, 80));
        Game.add(R4C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 80, 20));
        Game.add(R4C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 80, 20));
        Game.add(R4C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, 80, 20));
        Game.add(R4C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 80, 20));
        Game.add(R4C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 80, 20));
        Game.add(R4C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 80, 20));
        Game.add(R5C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 260, 20, 80));
        Game.add(R5C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, 60, 90));
        Game.add(R5C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, 20, 80));
        Game.add(R5C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, 60, 90));
        Game.add(R5C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 20, 80));
        Game.add(R5C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 60, 90));
        Game.add(R5C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 20, 80));
        Game.add(R5C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 60, 90));
        Game.add(R5C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 20, 80));
        Game.add(R5C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 60, 90));
        Game.add(R5C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 20, 80));
        Game.add(R5C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 60, 90));
        Game.add(R5C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 20, 80));
        Game.add(R6C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 340, 80, 20));
        Game.add(R6C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 80, 20));
        Game.add(R6C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 80, 20));
        Game.add(R6C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 80, 20));
        Game.add(R6C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 80, 20));
        Game.add(R6C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 80, 20));
        Game.add(R7C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 370, 20, 80));
        Game.add(R7C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 360, 60, 90));
        Game.add(R7C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 370, 20, 80));
        Game.add(R7C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 60, 90));
        Game.add(R7C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 20, 80));
        Game.add(R7C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 60, 90));
        Game.add(R7C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 20, 80));
        Game.add(R7C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 60, 90));
        Game.add(R7C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 20, 80));
        Game.add(R7C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 60, 90));
        Game.add(R7C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 20, 80));
        Game.add(R7C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 60, 90));
        Game.add(R7C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 20, 80));
        Game.add(R8C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, 80, 20));
        Game.add(R8C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, 80, 20));
        Game.add(R8C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, 80, 20));
        Game.add(R8C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 80, 20));
        Game.add(R8C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 80, 20));
        Game.add(R8C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 80, 20));
        Game.add(R9C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 20, 80));
        Game.add(R9C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 60, 90));
        Game.add(R9C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, 20, 80));
        Game.add(R9C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, 60, 90));
        Game.add(R9C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 480, 20, 80));
        Game.add(R9C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, 60, 90));
        Game.add(R9C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 20, 80));
        Game.add(R9C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 60, 90));
        Game.add(R9C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 20, 80));
        Game.add(R9C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 60, 90));
        Game.add(R9C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, 20, 80));
        Game.add(R9C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 60, 90));
        Game.add(R9C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 20, 80));
        Game.add(R10C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 570, 80, 20));
        Game.add(R10C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 570, 80, 20));
        Game.add(R10C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 570, 80, 20));
        Game.add(R10C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 570, 80, 20));
        Game.add(R10C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, 80, 20));
        Game.add(R10C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 80, 20));
        Game.add(R11C12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 590, 20, 80));
        Game.add(R11C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 580, 60, 90));
        Game.add(R11C10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 590, 20, 80));
        Game.add(R11C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 580, 60, 90));
        Game.add(R11C8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 590, 20, 80));
        Game.add(R11C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 580, 60, 90));
        Game.add(R11C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 600, 20, 80));
        Game.add(R11C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 580, 60, 90));
        Game.add(R11C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 590, 20, 80));
        Game.add(R11C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 580, 60, 90));
        Game.add(R11C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 590, 20, 80));
        Game.add(R11C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 60, 90));
        Game.add(R11C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 590, 20, 80));
        Game.add(R12C11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 670, 80, 20));
        Game.add(R12C9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 670, 80, 20));
        Game.add(R12C7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 670, 80, 20));
        Game.add(R12C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 670, 80, 20));
        Game.add(R12C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 670, 80, 20));
        Game.add(R12C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 80, 20));

        Board.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Board.png"))); // NOI18N
        Game.add(Board, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 660, 680));

        Turn.setFont(new java.awt.Font("Phosphate", 0, 30)); // NOI18N
        Turn.setText("Player 1 Turn");
        Game.add(Turn, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, -1, -1));

        Right.setText("→");
        Right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightActionPerformed(evt);
            }
        });
        Right.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RightKeyPressed(evt);
            }
        });
        Game.add(Right, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, 80, -1));

        Up.setText("↑");
        Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpActionPerformed(evt);
            }
        });
        Up.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UpKeyPressed(evt);
            }
        });
        Game.add(Up, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 80, -1));

        Down.setText("↓");
        Down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownActionPerformed(evt);
            }
        });
        Down.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DownKeyPressed(evt);
            }
        });
        Game.add(Down, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, 80, -1));

        Left.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        Left.setText("←");
        Left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftActionPerformed(evt);
            }
        });
        Left.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LeftKeyPressed(evt);
            }
        });
        Game.add(Left, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 200, 80, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Move:");
        Game.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, -1, -1));

        Right1.setBackground(new java.awt.Color(0, 0, 0));
        Right1.setForeground(new java.awt.Color(255, 255, 255));
        Right1.setText("→");
        Right1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Right1ActionPerformed(evt);
            }
        });
        Game.add(Right1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, 80, -1));

        Up1.setBackground(new java.awt.Color(0, 0, 0));
        Up1.setForeground(new java.awt.Color(255, 255, 255));
        Up1.setText("↑");
        Up1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Up1ActionPerformed(evt);
            }
        });
        Game.add(Up1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 330, 80, -1));

        Down1.setBackground(new java.awt.Color(0, 0, 0));
        Down1.setForeground(new java.awt.Color(255, 255, 255));
        Down1.setText("↓");
        Down1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Down1ActionPerformed(evt);
            }
        });
        Game.add(Down1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 390, 80, -1));

        Left1.setBackground(new java.awt.Color(0, 0, 0));
        Left1.setForeground(new java.awt.Color(255, 255, 255));
        Left1.setText("←");
        Left1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Left1ActionPerformed(evt);
            }
        });
        Game.add(Left1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, 80, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Walls:");
        Game.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, -1, -1));

        LTime.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 18)); // NOI18N
        LTime.setText("0");
        Game.add(LTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 70, 30, 50));

        jLabel7.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 18)); // NOI18N
        jLabel7.setText("Time:");
        Game.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, 70, 30));

        getContentPane().add(Game, "card2");

        End.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel3.setText("Winner:");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        End.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        Player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Player1.png"))); // NOI18N
        End.add(Player, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 60, 100));

        Winner.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        Winner.setForeground(new java.awt.Color(255, 255, 255));
        Winner.setText("Player 1");
        End.add(Winner, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, -1, -1));

        P2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        P2.setForeground(new java.awt.Color(255, 255, 255));
        P2.setText("10");
        End.add(P2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 30, 30));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Player 2 intervals:");
        End.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        P1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        P1.setForeground(new java.awt.Color(255, 255, 255));
        P1.setText("10");
        End.add(P1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 30, 30));

        Again.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Again.setText("Play Again");
        Again.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgainActionPerformed(evt);
            }
        });
        End.add(Again, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, 210, 80));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Player 1 intervals: ");
        End.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, -1, -1));

        DoubleCheck.setText("DoubleCheck");
        DoubleCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoubleCheckActionPerformed(evt);
            }
        });
        End.add(DoubleCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, 140, 60));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Name,Wins,Loses,Winrate(%)");
        End.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, 340, -1));

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("P1");
        End.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, -1));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("P2");
        End.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, -1, -1));

        jBtnBack1.setText("Back To Main Menu");
        jBtnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBack1ActionPerformed(evt);
            }
        });
        End.add(jBtnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 640, 190, 60));

        Board1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/63554228_p0.jpg"))); // NOI18N
        Board1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        End.add(Board1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 1020, 720));

        getContentPane().add(End, "card3");

        Review.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReviewText.setColumns(21);
        ReviewText.setFont(new java.awt.Font("Andale Mono", 0, 24)); // NOI18N
        ReviewText.setRows(5);
        ReviewText.setText("I O P\nI I I\nO O O\nP P P");
        jScrollPane2.setViewportView(ReviewText);

        Review.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 450, 410));

        Back3.setText("Back");
        Back3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back3ActionPerformed(evt);
            }
        });
        Review.add(Back3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 540, 120, 50));

        getContentPane().add(Review, "card4");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    pre: game has started
    post: initiate a timer that automatically connects for player if the time limit is reached
    */
    Timer timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (time > 0) {
                time--;
                LTime.setText(time + "");
                if (time>10) {
                    LTime.setForeground(Color.black);
                } else {
                    LTime.setForeground(Color.red);
                }
            } else {
                timer.stop();
                if (!d.connect(turn, 1)) {
                    if (!d.connect(turn, 2)) {
                        if (!d.connect(turn, 3)) {
                            d.connect(turn, 4);
                        }
                    }
                }
                if (d.isGoing()) {
                    if (turn == 1) {
                        turn = 2;
                    } else {
                        turn = 1;
                    }
                    Turn.setText("Player " + turn + " Turn");
                    Update();
                    time = 30;
                    timer.start();
                } else {
                    Change();
                }
            }
        }
    });
    /*
    pre: movement botton is clicked
    post: game updated according to the movement button
    @param: java.awt.event.ActionEvent evt is the botton that player click
    */
    private void RightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightActionPerformed
        // TODO add your handling code here:
        d.movePlayer(turn, 1);
        Update();
    }//GEN-LAST:event_RightActionPerformed

    private void UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpActionPerformed
        // TODO add your handling code here:
        d.movePlayer(turn, 4);
        Update();
    }//GEN-LAST:event_UpActionPerformed

    private void DownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownActionPerformed
        // TODO add your handling code here:
        d.movePlayer(turn, 2);
        Update();
    }//GEN-LAST:event_DownActionPerformed

    private void LeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftActionPerformed
        // TODO add your handling code here:
        d.movePlayer(turn, 3);
        Update();
    }//GEN-LAST:event_LeftActionPerformed
    
    /*
    pre: connect botton is clicked
    post: game updated according to the connect button, reset timer; if players are seperated game end, timer stop
    @param: java.awt.event.ActionEvent evt is the botton that player click
    */
    private void Right1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Right1ActionPerformed
        // TODO add your handling code here:
        if (d.connect(turn, 1)) {
            if (d.isGoing()) {
                if (turn == 1) {
                    turn = 2;
                } else {
                    turn = 1;
                }
                Turn.setText("Player " + turn + " Turn");
                Update();
                time = 30;
                timer.start();
            } else {
                timer.stop();
                Change();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Connect!");
        }
    }//GEN-LAST:event_Right1ActionPerformed

    private void Up1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Up1ActionPerformed
        // TODO add your handling code here:
        if (d.connect(turn, 4)) {
            if (d.isGoing()) {
                if (turn == 1) {
                    turn = 2;
                } else {
                    turn = 1;
                }
                Turn.setText("Player " + turn + " Turn");
                Update();
                time = 30;
                timer.start();
            } else {
                timer.stop();
                Change();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Connect!");
        }

    }//GEN-LAST:event_Up1ActionPerformed

    private void Down1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Down1ActionPerformed
        // TODO add your handling code here:
        if (d.connect(turn, 2)) {
            if (d.isGoing()) {
                if (turn == 1) {
                    turn = 2;
                } else {
                    turn = 1;
                }
                Turn.setText("Player " + turn + " Turn");
                Update();
                time = 30;
                timer.start();
            } else {
                timer.stop();
                Change();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Connect!");
        }
    }//GEN-LAST:event_Down1ActionPerformed

    private void Left1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Left1ActionPerformed
        // TODO add your handling code here:
        if (d.connect(turn, 3)) {
            if (d.isGoing()) {
                if (turn == 1) {
                    turn = 2;
                } else {
                    turn = 1;
                }
                Turn.setText("Player " + turn + " Turn");
                Update();
                time = 30;
                timer.start();
            } else {
                timer.stop();
                Change();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Connect!");
        }
    }//GEN-LAST:event_Left1ActionPerformed
    /*
    pre: again button is clicked
    post: initate the game
    @param: java.awt.event.ActionEvent evt is the botton that player click
    */
    private void AgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgainActionPerformed
        // TODO add your handling code here:
        d.reset();
        End.setVisible(false);
        Game.setVisible(true);
        Update();
        time = 30;
        timer.start();
    }//GEN-LAST:event_AgainActionPerformed

    private void UpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            d.movePlayer(turn, 4);
            Update();
        }
    }//GEN-LAST:event_UpKeyPressed

    private void DownKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DownKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            d.movePlayer(turn, 2);
            Update();
        }
    }//GEN-LAST:event_DownKeyPressed

    private void LeftKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LeftKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            d.movePlayer(turn, 3);
            Update();
        }
    }//GEN-LAST:event_LeftKeyPressed

    private void RightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RightKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            d.movePlayer(turn, 1);
            Update();
        }
    }//GEN-LAST:event_RightKeyPressed

    private void GameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            d.movePlayer(turn, 4);
            Update();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            d.movePlayer(turn, 3);
            Update();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            d.movePlayer(turn, 2);
            Update();
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            d.movePlayer(turn, 1);
            Update();
        }
    }//GEN-LAST:event_GameKeyPressed

    private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
        // TODO add your handling code here:
        Start.setVisible(false);
        Names.setVisible(true);
    }//GEN-LAST:event_StartGameActionPerformed

    private void RulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RulesActionPerformed
        // TODO add your handling code here:
        Start.setVisible(false);
        Rule.setVisible(true);
    }//GEN-LAST:event_RulesActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Rule.setVisible(false);
        Start.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void StartGame1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGame1ActionPerformed
        // TODO add your handling code here:
        if (!"".equals(P1N.getText()) && !"".equals(P2N.getText())) {
            d.setP1n(P1N.getText());
            d.setP2n(P2N.getText());
            Names.setVisible(false);
            Game.setVisible(true);
            time = 30;
            timer.start();
        } else {
            JOptionPane.showMessageDialog(null, "Does Not Allow Empty Names");
        }
    }//GEN-LAST:event_StartGame1ActionPerformed

    private void Back3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back3ActionPerformed
        // TODO add your handling code here:
        Review.setVisible(false);
        End.setVisible(true);
    }//GEN-LAST:event_Back3ActionPerformed

    private void DoubleCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoubleCheckActionPerformed
        // TODO add your handling code here:
        End.setVisible(false);
        ReviewText.setText(d.println());
        Review.setVisible(true);
    }//GEN-LAST:event_DoubleCheckActionPerformed

    private void leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftActionPerformed
        // TODO add your handling code here:
        RulesLabel.setIcon(d.getRules(0));
    }//GEN-LAST:event_leftActionPerformed

    private void rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightActionPerformed
        // TODO add your handling code here:
        RulesLabel.setIcon(d.getRules(1));
    }//GEN-LAST:event_rightActionPerformed

    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        // TODO add your handling code here:
        Names.setVisible(false);
        Start.setVisible(true);
    }//GEN-LAST:event_jBtnBackActionPerformed

    private void jBtnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBack1ActionPerformed
        // TODO add your handling code here:
        d.reset();
        Update();
        End.setVisible(false);
        Start.setVisible(true);
    }//GEN-LAST:event_jBtnBack1ActionPerformed
    /*
    pre: none
    post: store the labels into a label array
    */
    private void set() {
        l[0][1] = R0C1;
        l[0][3] = R0C3;
        l[0][5] = R0C5;
        l[0][7] = R0C7;
        l[0][9] = R0C9;
        l[0][11] = R0C11;
        l[1][0] = R1C0;
        l[1][1] = R1C1;
        l[1][2] = R1C2;
        l[1][3] = R1C3;
        l[1][4] = R1C4;
        l[1][5] = R1C5;
        l[1][6] = R1C6;
        l[1][7] = R1C7;
        l[1][8] = R1C8;
        l[1][9] = R1C9;
        l[1][10] = R1C10;
        l[1][11] = R1C11;
        l[1][12] = R1C12;
        l[2][1] = R2C1;
        l[2][3] = R2C3;
        l[2][5] = R2C5;
        l[2][7] = R2C7;
        l[2][9] = R2C9;
        l[2][11] = R2C11;
        l[3][0] = R3C0;
        l[3][1] = R3C1;
        l[3][2] = R3C2;
        l[3][3] = R3C3;
        l[3][4] = R3C4;
        l[3][5] = R3C5;
        l[3][6] = R3C6;
        l[3][7] = R3C7;
        l[3][8] = R3C8;
        l[3][9] = R3C9;
        l[3][10] = R3C10;
        l[3][11] = R3C11;
        l[3][12] = R3C12;
        l[4][1] = R4C1;
        l[4][3] = R4C3;
        l[4][5] = R4C5;
        l[4][7] = R4C7;
        l[4][9] = R4C9;
        l[4][11] = R4C11;
        l[5][0] = R5C0;
        l[5][1] = R5C1;
        l[5][2] = R5C2;
        l[5][3] = R5C3;
        l[5][4] = R5C4;
        l[5][5] = R5C5;
        l[5][6] = R5C6;
        l[5][7] = R5C7;
        l[5][8] = R5C8;
        l[5][9] = R5C9;
        l[5][10] = R5C10;
        l[5][11] = R5C11;
        l[5][12] = R5C12;
        l[6][1] = R6C1;
        l[6][3] = R6C3;
        l[6][5] = R6C5;
        l[6][7] = R6C7;
        l[6][9] = R6C9;
        l[6][11] = R6C11;
        l[7][0] = R7C0;
        l[7][1] = R7C1;
        l[7][2] = R7C2;
        l[7][3] = R7C3;
        l[7][4] = R7C4;
        l[7][5] = R7C5;
        l[7][6] = R7C6;
        l[7][7] = R7C7;
        l[7][8] = R7C8;
        l[7][9] = R7C9;
        l[7][10] = R7C10;
        l[7][11] = R7C11;
        l[7][12] = R7C12;
        l[8][1] = R8C1;
        l[8][3] = R8C3;
        l[8][5] = R8C5;
        l[8][7] = R8C7;
        l[8][9] = R8C9;
        l[8][11] = R8C11;
        l[9][0] = R9C0;
        l[9][1] = R9C1;
        l[9][2] = R9C2;
        l[9][3] = R9C3;
        l[9][4] = R9C4;
        l[9][5] = R9C5;
        l[9][6] = R9C6;
        l[9][7] = R9C7;
        l[9][8] = R9C8;
        l[9][9] = R9C9;
        l[9][10] = R9C10;
        l[9][11] = R9C11;
        l[9][12] = R9C12;
        l[10][1] = R10C1;
        l[10][3] = R10C3;
        l[10][5] = R10C5;
        l[10][7] = R10C7;
        l[10][9] = R10C9;
        l[10][11] = R10C11;
        l[11][0] = R11C0;
        l[11][1] = R11C1;
        l[11][2] = R11C2;
        l[11][3] = R11C3;
        l[11][4] = R11C4;
        l[11][5] = R11C5;
        l[11][6] = R11C6;
        l[11][7] = R11C7;
        l[11][8] = R11C8;
        l[11][9] = R11C9;
        l[11][10] = R11C10;
        l[11][11] = R11C11;
        l[11][12] = R11C12;
        l[12][1] = R12C1;
        l[12][3] = R12C3;
        l[12][5] = R12C5;
        l[12][7] = R12C7;
        l[12][9] = R12C9;
        l[12][11] = R12C11;
    }
    
    /*
    pre: game is running
    post: update the game board in GUI
    */
    private void Update() {
        set();
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 13; j++) {
                if (!((i % 2 == 0) && (j % 2 == 0))) {
                    l[i][j].setIcon(d.getImage(i, j));
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    private void Change() {
        Update();
        JOptionPane.showMessageDialog(null, "Game End");
        Game.setVisible(false);
        End.setVisible(true);
        int x[] = d.winner();
        if (x[0] != 3) {
            Winner.setText("Player " + x[0]);
            if (x[0] == 1) {
                String s[] = f.file(d.getP1n(), d.getP2n());
                jLabel11.setText(s[0]);
                jLabel12.setText(s[1]);
            } else {
                String s[] = f.file(d.getP2n(), d.getP1n());
                jLabel12.setText(s[0]);
                jLabel11.setText(s[1]);
            }
        } else {
            Winner.setText("It's a Tie!!!");
            jLabel11.setText("Score not Updated");
            jLabel12.setText("Score not Updated");
        }
        if (x[0] == 1) {
            ImageIcon a = new ImageIcon(getClass().getResource("/Image/Player1.png"));
            Player.setIcon(a);
        } else {
            if (x[0] == 2) {
                ImageIcon a = new ImageIcon(getClass().getResource("/Image/Player2.png"));
                Player.setIcon(a);
            } else {
                ImageIcon a = new ImageIcon(getClass().getResource(""));
                Player.setIcon(a);
            }
        }
        P1.setText(x[1] + "");
        P2.setText(x[2] + "");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ASDF;
    private javax.swing.JButton Again;
    private javax.swing.JButton Back;
    private javax.swing.JButton Back3;
    private javax.swing.JLabel Board;
    private javax.swing.JLabel Board1;
    private javax.swing.JLabel Board2;
    private javax.swing.JLabel Board3;
    private javax.swing.JLabel Board4;
    private javax.swing.JButton DoubleCheck;
    private javax.swing.JButton Down;
    private javax.swing.JButton Down1;
    private javax.swing.JPanel End;
    private javax.swing.JPanel Game;
    private javax.swing.JLabel LTime;
    private javax.swing.JButton Left;
    private javax.swing.JButton Left1;
    private javax.swing.JPanel Names;
    private javax.swing.JLabel P1;
    private javax.swing.JTextField P1N;
    private javax.swing.JLabel P2;
    private javax.swing.JTextField P2N;
    private javax.swing.JLabel Player;
    private javax.swing.JLabel R0C1;
    private javax.swing.JLabel R0C11;
    private javax.swing.JLabel R0C3;
    private javax.swing.JLabel R0C5;
    private javax.swing.JLabel R0C7;
    private javax.swing.JLabel R0C9;
    private javax.swing.JLabel R10C1;
    private javax.swing.JLabel R10C11;
    private javax.swing.JLabel R10C3;
    private javax.swing.JLabel R10C5;
    private javax.swing.JLabel R10C7;
    private javax.swing.JLabel R10C9;
    private javax.swing.JLabel R11C0;
    private javax.swing.JLabel R11C1;
    private javax.swing.JLabel R11C10;
    private javax.swing.JLabel R11C11;
    private javax.swing.JLabel R11C12;
    private javax.swing.JLabel R11C2;
    private javax.swing.JLabel R11C3;
    private javax.swing.JLabel R11C4;
    private javax.swing.JLabel R11C5;
    private javax.swing.JLabel R11C6;
    private javax.swing.JLabel R11C7;
    private javax.swing.JLabel R11C8;
    private javax.swing.JLabel R11C9;
    private javax.swing.JLabel R12C1;
    private javax.swing.JLabel R12C11;
    private javax.swing.JLabel R12C3;
    private javax.swing.JLabel R12C5;
    private javax.swing.JLabel R12C7;
    private javax.swing.JLabel R12C9;
    private javax.swing.JLabel R1C0;
    private javax.swing.JLabel R1C1;
    private javax.swing.JLabel R1C10;
    private javax.swing.JLabel R1C11;
    private javax.swing.JLabel R1C12;
    private javax.swing.JLabel R1C2;
    private javax.swing.JLabel R1C3;
    private javax.swing.JLabel R1C4;
    private javax.swing.JLabel R1C5;
    private javax.swing.JLabel R1C6;
    private javax.swing.JLabel R1C7;
    private javax.swing.JLabel R1C8;
    private javax.swing.JLabel R1C9;
    private javax.swing.JLabel R2C1;
    private javax.swing.JLabel R2C11;
    private javax.swing.JLabel R2C3;
    private javax.swing.JLabel R2C5;
    private javax.swing.JLabel R2C7;
    private javax.swing.JLabel R2C9;
    private javax.swing.JLabel R3C0;
    private javax.swing.JLabel R3C1;
    private javax.swing.JLabel R3C10;
    private javax.swing.JLabel R3C11;
    private javax.swing.JLabel R3C12;
    private javax.swing.JLabel R3C2;
    private javax.swing.JLabel R3C3;
    private javax.swing.JLabel R3C4;
    private javax.swing.JLabel R3C5;
    private javax.swing.JLabel R3C6;
    private javax.swing.JLabel R3C7;
    private javax.swing.JLabel R3C8;
    private javax.swing.JLabel R3C9;
    private javax.swing.JLabel R4C1;
    private javax.swing.JLabel R4C11;
    private javax.swing.JLabel R4C3;
    private javax.swing.JLabel R4C5;
    private javax.swing.JLabel R4C7;
    private javax.swing.JLabel R4C9;
    private javax.swing.JLabel R5C0;
    private javax.swing.JLabel R5C1;
    private javax.swing.JLabel R5C10;
    private javax.swing.JLabel R5C11;
    private javax.swing.JLabel R5C12;
    private javax.swing.JLabel R5C2;
    private javax.swing.JLabel R5C3;
    private javax.swing.JLabel R5C4;
    private javax.swing.JLabel R5C5;
    private javax.swing.JLabel R5C6;
    private javax.swing.JLabel R5C7;
    private javax.swing.JLabel R5C8;
    private javax.swing.JLabel R5C9;
    private javax.swing.JLabel R6C1;
    private javax.swing.JLabel R6C11;
    private javax.swing.JLabel R6C3;
    private javax.swing.JLabel R6C5;
    private javax.swing.JLabel R6C7;
    private javax.swing.JLabel R6C9;
    private javax.swing.JLabel R7C0;
    private javax.swing.JLabel R7C1;
    private javax.swing.JLabel R7C10;
    private javax.swing.JLabel R7C11;
    private javax.swing.JLabel R7C12;
    private javax.swing.JLabel R7C2;
    private javax.swing.JLabel R7C3;
    private javax.swing.JLabel R7C4;
    private javax.swing.JLabel R7C5;
    private javax.swing.JLabel R7C6;
    private javax.swing.JLabel R7C7;
    private javax.swing.JLabel R7C8;
    private javax.swing.JLabel R7C9;
    private javax.swing.JLabel R8C1;
    private javax.swing.JLabel R8C11;
    private javax.swing.JLabel R8C3;
    private javax.swing.JLabel R8C5;
    private javax.swing.JLabel R8C7;
    private javax.swing.JLabel R8C9;
    private javax.swing.JLabel R9C0;
    private javax.swing.JLabel R9C1;
    private javax.swing.JLabel R9C10;
    private javax.swing.JLabel R9C11;
    private javax.swing.JLabel R9C12;
    private javax.swing.JLabel R9C2;
    private javax.swing.JLabel R9C3;
    private javax.swing.JLabel R9C4;
    private javax.swing.JLabel R9C5;
    private javax.swing.JLabel R9C6;
    private javax.swing.JLabel R9C7;
    private javax.swing.JLabel R9C8;
    private javax.swing.JLabel R9C9;
    private javax.swing.JPanel Review;
    private javax.swing.JTextArea ReviewText;
    private javax.swing.JButton Right;
    private javax.swing.JButton Right1;
    private javax.swing.JPanel Rule;
    private javax.swing.JButton Rules;
    private javax.swing.JLabel RulesLabel;
    private javax.swing.JPanel Start;
    private javax.swing.JButton StartGame;
    private javax.swing.JButton StartGame1;
    private javax.swing.JLabel Turn;
    private javax.swing.JButton Up;
    private javax.swing.JButton Up1;
    private javax.swing.JLabel Winner;
    private javax.swing.JButton jBtnBack;
    private javax.swing.JButton jBtnBack1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton left;
    private javax.swing.JButton right;
    // End of variables declaration//GEN-END:variables
}
